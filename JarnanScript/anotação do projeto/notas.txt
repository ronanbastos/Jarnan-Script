Process exec;  
        try {  
            exec = Runtime.getRuntime().exec("ipconfig");  
            if ( exec.waitFor() == 0)  
                System.out.println("Executado.");  
            else  
                System.out.println("ERRO");  
        } catch (IOException e) {  
            e.printStackTrace();  
        } catch (InterruptedException e) {  
            e.printStackTrace();  
        }  
}

static final Runtime run = Runtime.getRuntime();
    static Process pro;
    static BufferedReader read;

    private static void showFB()
    {
        read = new BufferedReader(new InputStreamReader(pro.getInputStream()));
        System.out.println(read.readLine());
    }

    public static void main(String[] args)
    {
        String Start = "cmd /c start cmd.exe";

        try {
            pro = run.exec(Start);
            showFB();//Mostra as resposta

            OutputStream out = pro.getOutputStream();

            out.write("cd C:/ /r/n".getBytes());
            out.flush();
            showFB();//Mostra as resposta

            out.write("dir /r/n".getBytes());
            showFB();//Mostra as resposta

            out.close();
        } catch(Exception e) {
            System.err.println(e);
        }
    }
}


//criação das variáveis nome do arquivo e PATH

String[] env = {"PATH=/bin:/usr/bin/"};
String cmd = "bkb2.sh";  //e.g test.sh -dparam1 -oout.txt
//tratamento de erro e execução do script

try {
	Process process = Runtime.getRuntime().exec(cmd, env);
} catch (IOException ex) {
	Logger.getLogger(TecMain.class.getName()).log(Level.SEVERE, null, ex);
}

----------------------------
ler , e ? e ; em uma string

public class TesteString {
	public static void main(String[] args) {
		String linha = "olá mundo, Java. JSE; JEE.";
		linha=linha.replace(",", ";");
		System.out.println(linha);
		linha=linha.replace(".", ";");
		System.out.println(linha);
		String[] s = linha.split(";");
		System.out.println(s[0]);
		System.out.println(s[1]);
		System.out.println(s[2]);
		System.out.println(s[3]);
	}
}

----------------------------
if ("qwerASDFzxcv".contains("ASDF")) {
    System.out.println ("ASDF foi encontrada em qwerASDFzxcv");
}

INSERT INTO `resposta` (`idr`, `txt_resposta`, `negativa`, `esclamativa`, `interrogativa`) VALUES (NULL, 'oi', '', '', '');

----------------------------
pega conteudo da pagina 

	Connection connection = Jsoup.connect("https://pt.wikipedia.org/wiki/rock");
			            Document htmlDocument;
						try {
							htmlDocument = connection.get();
							  Elements linksOnPage = htmlDocument.select("p");
					            System.out.println("Found (" + linksOnPage.size() + ") links");
					            for (Element link : linksOnPage) {
					               // System.out.println(link.selectFirst("p").ownText());
					                textArea.setText(textArea.getText()+dateFormat.format(new Date())+" SATi: "+link.selectFirst("p").ownText()+"\n");
					            }
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
						
-----------------------------
criando diretorios e arquivos
fileFolder.mkdir(); // Para criar apenas uma pasta Ex.: C:\Teste
fileFolder.mkdirs(); // Para criar todas as pastas dentro de um caminho Ex.: C:\Teste\Teste1\Teste2\Teste3	

 BufferedWriter bw = new BufferedWriter(fw);
            bw.write(jcbCertificado.getSelectedItem().toString());
            bw.newLine();
            bw.write(jpwSenha.getText());
            bw.newLine();
            bw.close();
            
            String separator = System.getProperty("file.separator");  
StringBuilder builder = new StringBuilder();
builder.append("Forum");
builder.append(separator);
builder.append("Guj");
builder.append(separator);
builder.append("Java");
builder.append(separator);
______________________
//Recuperando as informações de um arquivo ou diretório
import java.io.File;
  import java.util.Scanner;
    
  public class Exemplo1 {
    
    public static void main(String[] args) {
      Scanner ler = new Scanner(System.in);
    
      System.out.printf("Informe o nome de um arquivo ou diretório:\n");
      String nome = ler.nextLine();
    
      File objFile = new File(nome);
      if (objFile.exists()) {
         if (objFile.isFile()) {
            System.out.printf("\nArquivo (%s) existe - tamanho: %d bytes\n",
              objFile.getName(),  objFile.length());
         }
         else {
           System.out.printf("\nConteúdo do diretório:\n");
           String diretorio[] = objFile.list();
           for (String item: diretorio) {
             System.out.printf("%s\n", item);
           }
         }
      } else System.out.printf("Erro: arquivo ou diretório informado não existe!\n");
    }
  }
            fw.close();	
            				
	_______	
//Gravando dados em um arquivo binário.
//lembre coloca um variavel 	new FileInputStream("d:\\variavel") para gera qualquer tipo de aquirvo
					
import java.io.DataInputStream;
  import java.io.FileInputStream;
  import java.io.IOException;
    
  public class Exemplo3 {
    
    public static void main(String[] args) throws IOException {
      String nome;
      char sexo;
      int idade, altura;
      double pc;  // peso corporal
      double GEB; // gasto energético basal
    
      FileInputStream arq = new FileInputStream("d:\\arquivo.dat");
      DataInputStream lerArq = new DataInputStream(arq);
    
      nome = lerArq.readUTF();
      sexo = lerArq.readChar();
      idade = lerArq.readInt();
      pc = lerArq.readDouble();
      altura = lerArq.readInt();
       
      // calculando o gasto energético basal
      if ((sexo == 'M') || (sexo == 'm'))
         GEB = 66.47 + (13.75 * pc) + (5 * altura) - (6.76 * idade);
      else
         GEB = 655.1 + (9.56 * pc) + (1.85 * altura) - (4.67 * idade);
    
      System.out.printf("Nome..................: %s\n", nome);
      System.out.printf("Sexo..................: %c\n", sexo);
      System.out.printf("Idade.................: %d anos\n", idade);
      System.out.printf("Peso Corporal.........: %.2f kgs\n", pc);
      System.out.printf("Altura................: %d cm\n", altura);
      System.out.printf("Gasto Energético Basal: %.0f kcal/dia\n", GEB);
    
      arq.close();
    }
  }
  
  if(str.equals("pesquise noticias"))
					{
						
						
						
						
						
						System.out.println("modo pesquise ativado!");
					
						Connection connection = Jsoup.connect("https://www.google.com/search?rlz=1C1CHBD_pt-PTBR826BR826&q=noticias&tbm=nws&source=univ&tbo=u&sa=X&ved=2ahUKEwjKt9i0stPgAhX7K7kGHeWFCoQQt8YBKAF6BAgAEC4");
						   
						Document htmlDocument;
						textArea.setText(textArea.getText()+"  								     \n");
						textArea.setText(textArea.getText()+" | Iniciando verificação ....... | \n");
						textArea.setText(textArea.getText()+" 								   	 \n");
						
						
						 try {
							
									htmlDocument = connection.get();
									Elements linksOnPage = htmlDocument.getElementsMatchingText("a");
						            System.out.println("Found (" + linksOnPage.size() + ") links");
						            for (Element link : linksOnPage) {
						               // System.out.println(link.selectFirst("p").ownText());
						              
						             
						            	   textArea.setText(textArea.getText()+link.text()+"\n");
						             
						            }
							} catch (IOException e1) {
								// TODO quando da erro de url.
								e1.printStackTrace();
								textArea.setText(textArea.getText()+"Opa,erros foram cometidos!! \n");
								
							}
						

						
					}
				
					if(str.equals("pesquise sobre"))
					{
						pesquise=true;
						
						textArea.setText(textArea.getText()+dateFormat.format(new Date())+" SATi: "+"O que você gostaria saber?"+"\n");
						
						System.out.println("modo pesquise ativado!");
					}else if(pesquise==true && str !="")
					{
						
					Connection connection = Jsoup.connect("https://pt.wikipedia.org/wiki/"+str+"");
					   
					Document htmlDocument;
					textArea.setText(textArea.getText()+"  								     \n");
					textArea.setText(textArea.getText()+" | Iniciando verificação ....... | \n");
					textArea.setText(textArea.getText()+" 								   	 \n");
					
					
					 try {
						
								htmlDocument = connection.get();
								Elements linksOnPage = htmlDocument.select("p");
					            System.out.println("Found (" + linksOnPage.size() + ") links");
					            for (Element link : linksOnPage) {
					               // System.out.println(link.selectFirst("p").ownText());
					                textArea.setText(textArea.getText()+link.selectFirst("p").ownText()+"\n");
					                textArea.setText(textArea.getText()+" "+"\n");
					             
					            }
						} catch (IOException e1) {
							// TODO quando da erro de url.
							e1.printStackTrace();
							textArea.setText(textArea.getText()+"Opa,erros foram cometidos!! \n");
							pesquise=false;
						}
						pesquise=false;

					} 
					
					
------------------------------------------------------------------------------------------
enviar arquivos via rede 

Cliente

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.Scanner;

public class Client {
	public static void main(String[] args) throws Exception {
		Scanner tc = new Scanner(System.in);
		System.out.println("File:");
		String fName = tc.nextLine();

		File f = new File("/home/TTI1/marlon/Documentos/" + fName);
		FileInputStream in = new FileInputStream(f);

		Socket socket = new Socket("localhost", 5678);
		OutputStream out = socket.getOutputStream();
		OutputStreamWriter osw = new OutputStreamWriter(out);
		BufferedWriter writer = new BufferedWriter(osw);
		writer.write(f.getName() + "\n");
		writer.flush();
		int tamanho = 4096; // buffer de 4KB  
	    byte[] buffer = new byte[tamanho];  
	    int lidos = -1;  
	    while ((lidos = in.read(buffer, 0, tamanho)) != -1) {  
	        out.write(buffer, 0, lidos);  
	    }  
	}

}
Servidor

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
	public static void main(String[] args) {
		try {
			ServerSocket server = new ServerSocket(5678);
			Socket clSocket = server.accept();
			InputStream in = clSocket.getInputStream();
			InputStreamReader isr = new InputStreamReader(in);
			BufferedReader reader = new BufferedReader(isr);
			String fName = reader.readLine();
			System.out.println(fName);
			File f1 = new File("/home/TTI1/marlon/Documentos/novo/" + fName);
			FileOutputStream out = new FileOutputStream(f1);

			    int tamanho = 4096; // buffer de 4KB  
			    byte[] buffer = new byte[tamanho];  
			    int lidos = -1;  
			    while ((lidos = in.read(buffer, 0, tamanho)) != -1) {  
			    	System.out.println(lidos);
			        out.write(buffer, 0, lidos);  
			    }  
			    out.flush();  
		} catch (IOException e) {
		}
	}
}
------------------------------------------------------------------------------------------------------
    // copia os dados
    InputStream in;
    // escreve os dados
    OutputStream out;
    try{
        // arquivos que vamos copiar
        File toFile = new File("toFile.txt");
        // destino para onde vamos mover o arquivo
        File fromFile = new File("newfolder/newFile.txt");
        //verifica se o arquivo existe
        if(!fromFile.exists()){
            //verifica se a pasta existe
            if(!fromFile.getParentFile().exists()){
                //cria a pasta
                fromFile.getParentFile().mkdir();
            }
            // cria o arquivo
            fromFile.createNewFile();
        }
        in = new FileInputStream(toFile);
        out = new FileOutputStream(fromFile);
        // buffer para transportar os dados
        byte[] buffer = new byte[1024];
        int length;
        // enquanto tiver dados para ler..
        while((length = in.read(buffer)) > 0 ){
            // escreve no novo arquivo
            out.write(buffer, 0 , length);
        }

        in.close();
        out.close();
        //apaga o arquivo antigo
        toFile.delete();

    }catch(IOException e){
        e.printStackTrace();
    }


}
---------------------------------------------------------------------------------
  fl.renameTo(new File("C:\Exercicio_Java\MeuArquivo"));				
  
---------------------------------------------------------------------------------
gravar em dados em .dat

import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;
  
public class Exemplo2 {
  
  public static void main(String[] args) throws FileNotFoundException, IOException {
    Scanner ler = new Scanner(System.in);
    String nome;
    char sexo;
    int idade, altura;
    double pc; // peso corporal
  
    FileOutputStream arq = new FileOutputStream("d:\\arquivo.dat");
    DataOutputStream gravarArq = new DataOutputStream(arq);
  
    System.out.printf("Informe o seu nome:\n");
    nome = ler.nextLine();
  
    System.out.printf("\nInforme o seu sexo (M/F)...........: ");
    sexo = (char)System.in.read();
  
    System.out.printf("Informe a sua idade................: ");
    idade = ler.nextInt();
  
    System.out.printf("Informe o seu peso corporal (em kg): ");
    pc = ler.nextDouble();
  
    System.out.printf("Informe a sua altura (em cm).......: ");
    altura = ler.nextInt();
  
    gravarArq.writeUTF(nome);
    gravarArq.writeChar(sexo);
    gravarArq.writeInt(idade);
    gravarArq.writeDouble(pc);
    gravarArq.writeInt(altura);
  
    arq.close();
  
    System.out.printf("\nDados gravados com sucesso em \"d:\\arquivo.dat\".\n");
  }
}

ler arquivos .dat

import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;
  
public class Exemplo3 {
  
  public static void main(String[] args) throws IOException {
    String nome;
    char sexo;
    int idade, altura;
    double pc;  // peso corporal
    double GEB; // gasto energético basal
  
    FileInputStream arq = new FileInputStream("d:\\arquivo.dat");
    DataInputStream lerArq = new DataInputStream(arq);
  
    nome = lerArq.readUTF();
    sexo = lerArq.readChar();
    idade = lerArq.readInt();
    pc = lerArq.readDouble();
    altura = lerArq.readInt();
     
    // calculando o gasto energético basal
    if ((sexo == 'M') || (sexo == 'm'))
       GEB = 66.47 + (13.75 * pc) + (5 * altura) - (6.76 * idade);
    else
       GEB = 655.1 + (9.56 * pc) + (1.85 * altura) - (4.67 * idade);
  
    System.out.printf("Nome..................: %s\n", nome);
    System.out.printf("Sexo..................: %c\n", sexo);
    System.out.printf("Idade.................: %d anos\n", idade);
    System.out.printf("Peso Corporal.........: %.2f kgs\n", pc);
    System.out.printf("Altura................: %d cm\n", altura);
    System.out.printf("Gasto Energético Basal: %.0f kcal/dia\n", GEB);
  
    arq.close();
  }
}
-----------------------------------------------------------------------
  Object [][] dados = {
        {"Ana Monteiro", "48 9923-7898", "ana.monteiro@gmail.com"},
        {"João da Silva", "48 8890-3345", "joaosilva@hotmail.com"},
        {"Pedro Cascaes", "48 9870-5634", "pedrinho@gmail.com"}
    };
     
    String [] colunas = {"Nome", "Telefone", "Email"}; 
     
 						